# frozen_string_literal: true

################################################################################################
# Copyright 2023 GlobalFoundries PDK Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
################################################################################################

#================================================
#---------------------DNWELL---------------------
#================================================
if FEOL && SPLIT_DEEP
  if CONNECTIVITY_RULES
    logger.info('CONNECTIVITY_RULES section')

    connected_dnwell, unconnected_dnwell = conn_space(dnwell, 2.5, 5.42, euclidian)
    # Rule DN.2a: Min. DNWELL Space (Equi-potential), Merge if the space is less than is 2.5µm
    logger.info('Executing rule DN.2a')
    dn2a_l1 = connected_dnwell
    dn2a_l1.output('DN.2a', 'DN.2a : Min. DNWELL Space (Equi-potential), Merge if the space is less than : 2.5µm')
    dn2a_l1.forget

    # Rule DN.2b: Min. DNWELL Space (Different potential) is 5.42µm
    logger.info('Executing rule DN.2b')
    dn2b_l1 = unconnected_dnwell

  else
    logger.info('CONNECTIVITY_RULES disabled section')

    # Rule DN.2b_: Min. DNWELL Space (Different potential) is 5.42µm
    logger.info('Executing rule DN.2b')
    dn2b_l1 = dnwell.isolated(5.42.um, euclidian)

  end
  dn2b_l1.output('DN.2b', 'DN.2b : Min. DNWELL Space (Different potential) : 5.42µm')
  dn2b_l1.forget # CONNECTIVITY_RULES
end
